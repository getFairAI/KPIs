module.exports = {
  apiVersion: '0.1', // manually changed
  apiBaseURL: '/kpi-caching/request', // example: '/api/requests' // no forward slash (/) in the end!

  // apollo GQL configs
  apolloGraphQLRequestsUrl: 'https://arweave.net/graphql',
  PROTOCOL_NAME: 'FairAI',
  PROTOCOL_VERSION: '2.0',
  SOLUTION_CREATION: 'Solution Creation',
  QUERY_LIMIT: 100, // limit to add to GraphQL queries to Arweave (required to be bellow 100)

  // first block from which to get all next transaction blocks when updating payments (only used if PAYMENTS collection on DB is empty)
  // startBlock: 165788861,
  startBlock: 242498175,

  TAG_NAMES: {
    protocolName: 'Protocol-Name',
    protocolVersion: 'Protocol-Version',
    appName: 'App-Name',
    customAppName: 'Custom-App-Name',
    appVersion: 'App-Version',
    customAppVersion: 'Custom-App-Version',
    contentType: 'Content-Type',
    unixTime: 'Unix-Time',
    modelName: 'Model-Name',
    modelCreator: 'Model-Creator',
    modelOperator: 'Model-Operator',
    modelTransaction: 'Model-Transaction',
    modelUser: 'Model-User',
    operationName: 'Operation-Name',
    notes: 'Notes',
    modelCategory: 'Model-Category',
    avatarUrl: 'AvatarUrl',
    description: 'Description',
    operatorName: 'Operator-Name',
    operatorFee: 'Operator-Fee',
    conversationIdentifier: 'Conversation-Identifier',
    inferenceTransaction: 'Inference-Transaction',
    requestTransaction: 'Request-Transaction',
    responseTransaction: 'Response-Transaction',
    attachmentName: 'Attachment-Name',
    attachmentRole: 'Attachment-Role',
    saveTransaction: 'Save-Transaction',
    paymentQuantity: 'Payment-Quantity',
    paymentTarget: 'Payment-Target',
    solutionName: 'Solution-Name',
    solutionCreator: 'Solution-Curator',
    solutionOperator: 'Solution-Operator',
    solutionUser: 'Solution-User',
    voteFor: 'Vote-For',
    votedTransaction: 'Voted-Transaction',
    fileName: 'File-Name',
    allowFiles: 'Allow-Files',
    allowText: 'Allow-Text',
    registrationTransaction: 'Registration-Transaction',
    registrationFee: 'Registration-Fee',
    input: 'Input',
    contract: 'Contract',
    sequencerOwner: 'Sequencer-Owner',
    updateFor: 'Update-For',
    previousVersions: 'Previous-Versions',
    txOrigin: 'Transaction-Origin',
    assetNames: 'Asset-Names',
    negativePrompt: 'Negative-Prompt',
    userCustomTags: 'User-Custom-Tags',
    nImages: 'N-Images',
    output: 'Output',
    outputConfiguration: 'Output-Configuration',
    contractSrc: 'Contract-Src',
    contractManifest: 'Contract-Manifest',
    initState: 'Init-State',
    license: 'License',
    derivation: 'Derivation',
    commercialUse: 'Commercial-Use',
    licenseFee: 'License-Fee',
    currency: 'Currency',
    expires: 'Expires',
    paymentAddress: 'Payment-Address',
    paymentMode: 'Payment-Mode',
    licenseConfig: 'License-Config',
    userRatingScore: 'User-Rating-Score',
    userRatingComment: 'User-Rating-Comment',
    generateAssets: 'Generate-Assets',
    rareweaveConfig: 'Rareweave-Config',
    termsVersion: 'Terms-Version',
    keywords: 'Keywords',
    solutionTransaction: 'Solution-Transaction',
    rewardsEvmAddress: 'Rewards-Evm-Address',
    privateMode: 'Private-Mode',
    encDataForOperator: 'Encrypted-Data-For-Operator',
  },
};
